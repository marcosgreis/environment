priority -50

extends c

priority -45

snippet plog "printf log"
printf("MGR - `!p snip.rv = snip.basename`::%s - $0\n", __FUNCTION__);
endsnippet

snippet clog "cout log"
std::cout << "MGR - `!p snip.rv = snip.basename`::" << __FUNCTION__ << " 1 - $0" << std::endl;
endsnippet

snippet testaaa "AAA test"
TEST(${1:functionTested}, ${2:conditionBeingTested}_${3:expectedResult})
{
	// Arrange
	$0

	// Act

	// Assert
	EXPECT_THAT(false, Eq(true));
}
endsnippet

snippet testbdd "BDD test"
TEST(${1:functionTested}, ${2:conditionBeingTested}_${3:expectedResult})
{
	// Given
	$0

	// When

	// Then
	EXPECT_THAT(false, Eq(true));
}
endsnippet

snippet testfixture "Fixture test"
TEST_F(`!p snip.rv = snip.basename`${1:Fixture}, ${2:conditionBeingTested}_${3:expectedResult})
{
	// Arrange
	$0

	// Act

	// Assert
	EXPECT_THAT(false, Eq(true));
}
endsnippet

snippet testfile "Test file"
#include <gmock/gmock.h>
#include "${0:includeFile}"

using namespace testing;

class `!p snip.rv = snip.basename`Fixture : public Test {
protected:
    virtual void SetUp() {}

	std::shared_ptr<${1:ClassToBeTested}> create() {
		return std::make_shared<$1>();
	}
};

TEST_F(`!p snip.rv = snip.basename`Fixture, conditionBeingTested_expectedResult)
{
    // Arrange

    // Act

    // Assert
    EXPECT_THAT(false, Eq(true));
}
endsnippet
